<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0818.2120                               -->
<workbook original-version='18.1' source-build='2019.2.3 (20192.19.0818.2120)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (GDPperCapita)' inline='true' name='federated.029lnkj04jrr9410wzmt419jhm5b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GDPperCapita' name='excel-direct.12yvqqq12shchp158g2r01lnzg9a'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='G:/My Drive/Y3S1/IS424 Data Mining/Project/EDA/GDPperCapita.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.12yvqqq12shchp158g2r01lnzg9a' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Country / territory of asylum/residence' ordinal='1' />
            <column datatype='string' name='Origin' ordinal='2' />
            <column datatype='real' name='GDP_difference' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country / territory of asylum/residence</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country / territory of asylum/residence]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country / territory of asylum/residence</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Origin]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Origin</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP_difference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP_difference]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP_difference</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D10001:no:A1:D10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country / territory of asylum/residence]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='GDP difference' datatype='real' name='[GDP_difference]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Country / territory of asylum/residence]' derivation='None' name='[none:Country / territory of asylum/residence:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.482085' measure-ordering='alphabetic' measure-percentage='0.517915' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country / territory of asylum/residence:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rep. of Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rep. of Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Rep. of Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;The former Yugoslav Republic of Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dem. Rep. of the Congo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Syrian Arab Rep.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Rep.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lao People&apos;s Dem. Rep.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Czech Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia and Kosovo (S/RES/1244 (1999))&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='GDP difference per country (2001-2016)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (GDPperCapita)' name='federated.029lnkj04jrr9410wzmt419jhm5b' />
          </datasources>
          <datasource-dependencies datasource='federated.029lnkj04jrr9410wzmt419jhm5b'>
            <column datatype='string' name='[Country / territory of asylum/residence]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='GDP difference' datatype='real' name='[GDP_difference]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin]' role='dimension' type='nominal' />
            <column-instance column='[Country / territory of asylum/residence]' derivation='None' name='[none:Country / territory of asylum/residence:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin]' derivation='None' name='[none:Origin:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP_difference]' derivation='Sum' name='[sum:GDP_difference:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.029lnkj04jrr9410wzmt419jhm5b].[none:Country / territory of asylum/residence:nk]' direction='DESC' using='[federated.029lnkj04jrr9410wzmt419jhm5b].[sum:GDP_difference:qk]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.029lnkj04jrr9410wzmt419jhm5b].[none:Origin:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.029lnkj04jrr9410wzmt419jhm5b].[sum:GDP_difference:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.029lnkj04jrr9410wzmt419jhm5b].[none:Country / territory of asylum/residence:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.029lnkj04jrr9410wzmt419jhm5b].[none:Country / territory of asylum/residence:nk] / [federated.029lnkj04jrr9410wzmt419jhm5b].[none:Origin:nk])</rows>
        <cols>[federated.029lnkj04jrr9410wzmt419jhm5b].[sum:GDP_difference:qk]</cols>
      </table>
      <simple-id uuid='{2EF39090-AA38-4DC7-BABC-78051DCDF505}' />
    </worksheet>
    <worksheet name='GDP difference per year by countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (GDPperCapita)' name='federated.029lnkj04jrr9410wzmt419jhm5b' />
          </datasources>
          <datasource-dependencies datasource='federated.029lnkj04jrr9410wzmt419jhm5b'>
            <column datatype='string' name='[Country / territory of asylum/residence]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='GDP difference' datatype='real' name='[GDP_difference]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country / territory of asylum/residence]' derivation='None' name='[none:Country / territory of asylum/residence:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin]' derivation='None' name='[none:Origin:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP_difference]' derivation='Sum' name='[sum:GDP_difference:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.029lnkj04jrr9410wzmt419jhm5b].[sum:GDP_difference:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([federated.029lnkj04jrr9410wzmt419jhm5b].[none:Country / territory of asylum/residence:nk] / [federated.029lnkj04jrr9410wzmt419jhm5b].[none:Origin:nk]) * [federated.029lnkj04jrr9410wzmt419jhm5b].[sum:GDP_difference:qk])</rows>
        <cols>[federated.029lnkj04jrr9410wzmt419jhm5b].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{B6216F70-F914-4D4D-A709-5A2B994EE998}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='GDP difference per country (2001-2016)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.029lnkj04jrr9410wzmt419jhm5b].[none:Country / territory of asylum/residence:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.029lnkj04jrr9410wzmt419jhm5b].[none:Country / territory of asylum/residence:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{86176C1C-2318-4163-845A-EDC2CE8663A7}' />
    </window>
    <window class='worksheet' name='GDP difference per year by countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.029lnkj04jrr9410wzmt419jhm5b].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FE4C006-80C1-4BFC-95A8-A7BA15EECCB5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='GDP difference per country (2001-2016)' width='384'>
      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
      4oz6/+dTWftE0Wr8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='GDP difference per year by countries' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
